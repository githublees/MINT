{"ast":null,"code":"import _objectSpread from\"C:/SSAFY/WORKSPACE/NFT/S06P22A106/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/SSAFY/WORKSPACE/NFT/S06P22A106/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/SSAFY/WORKSPACE/NFT/S06P22A106/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/SSAFY/WORKSPACE/NFT/S06P22A106/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\SSAFY\\\\WORKSPACE\\\\NFT\\\\S06P22A106\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import*as Yup from'yup';import{Box,Container,Stack,TextField,Typography}from'@mui/material';import{Form,FormikProvider,useFormik}from'formik';import{LoadingButton}from'@mui/lab';import{useEffect,useState}from'react';import{MotionContainer,varBounceIn}from'../components/animate';import{motion}from'framer-motion';import{useLocation}from'react-router-dom';import ItemList from'../layouts/whosart/ItemList';import COMMON_HEADER from'../common/HeaderType';import COMMON_ABI from'../common/ABI';import COMMON_CONTRACT from'../common/SaleInfoGetter';import{onResponse,onInvalidAddress}from'../common/ErrorMessage';import moment from'moment';import axios from'axios';import Web3 from'web3';import Page from'../components/Page';/**\r\n * [후즈컬렉션]를 위한 UI와 기능\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var WhosArt=function WhosArt(){// [변수] 판매자 주소 (URL 파라미터 사용 / 구매하기 - 상세 작품 화면 - 컬렉션 보기로 진입한 경우 사용)\nvar prevAddress=useLocation().pathname.substring(9);// [변수] 아이템, 로딩, 컬렉션 유무, 현재 시간\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),item=_useState2[0],setItem=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isCollection=_useState6[0],setIsCollection=_useState6[1];var currentTime=parseInt((moment()/1000).toFixed(0));// Web3\nvar web3=new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_ETHEREUM_RPC_URL));/**\r\n   * [초기 데이터 설정]\r\n   * 화면 첫 렌더링시 판매되고 있는 작품 리스트를 조회합니다. \r\n   * 만약 구매하기 - 상세 작품 화면 - 컬렉션 보기로 진입한 경우 판매자 주소가 넘어오며, \r\n   * 해당 주소를 조회하여 판매하고 있는 아이템을 확인합니다.\r\n  */useEffect(function(){if(prevAddress!=='app')searchItem(prevAddress);else showItems();},[]);// 타이핑 헬퍼\nvar typeSchema=Yup.object().shape({address:Yup.string().required()});// 입력 데이터 처리\nvar formik=useFormik({initialValues:{address:''},validationSchema:typeSchema,onSubmit:function onSubmit(value){checkAddress(value.address);}});var isSubmitting=formik.isSubmitting,setSubmitting=formik.setSubmitting,handleSubmit=formik.handleSubmit,handleReset=formik.handleReset,getFieldProps=formik.getFieldProps;// 카드 화면 생성을 위한 데이터 전달\nvar products=_toConsumableArray(Array(item.length)).map(function(_,index){return{image:item[index].image,title:item[index].title,onSale:item[index].onSale,tokenId:item[index].id,hash:item[index].hash,ended:item[index].ended};});/**\r\n   * [주소 정합성 확인]\r\n   * 지갑 주소 창에 입력한 주소가 유효한 주소인 경우에 아이템을 조회하며, \r\n   * 지갑 주소 형태가 아닌 경우에는 유효한 주소를 입력해달라는 경고창을 출력합니다.\r\n   * @param {*} addr \r\n   */var checkAddress=function checkAddress(addr){var targetAddress=web3.utils.isAddress(addr);if(targetAddress)searchItem(addr);else{setSubmitting(false);onInvalidAddress();}};/**\r\n   * PJT Ⅱ - 과제 2: 작품 조회\r\n   * Req.2-F1 작품 목록 조회  \r\n   * \r\n   * PJT Ⅲ - 과제 2: 거래 진행  \r\n   * Req.4-F2 후즈컬렉션 화면 - 판매 상태에 따라 호출할 수 있는 기능이 달라집니다.\r\n   * \r\n   * 구현 예)\r\n   * 지갑 주소가 입력되어 있지 않은 경우 현재 판매중인 모든 아이템을 화면 상에 보여줍니다.\r\n   * 1. 판매 작품 조회 API 호출 후 반환 받은 데이터를 가지고 카드 화면을 생성합니다.\r\n   * 요청 응답 데이터: Token ID, Sale 컨트랙트 주소, 아이템 Hash(카드 화면의 고유 구별 Key), 제목, 판매중 여부\r\n   * 2. NFT 컨트랙트의 tokenURI() 함수를 호출해 이미지를 화면에 표시할 수 있어야 합니다. \r\n   * 3. 빈 응답인 경우 결과 없음 화면이 출력됩니다.\r\n   * ------\r\n   * \r\n   * PJT Ⅲ에 아래 로직이 추가됩니다.\r\n   * Sale 컨트랙트의 상태와 버튼을 조회하여 종료 여부를 카드 요소에 전달합니다.\r\n   */var showItems=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// TODO\nsetIsCollection(false);setLoading(false);case 2:case\"end\":return _context.stop();}}},_callee);}));return function showItems(){return _ref.apply(this,arguments);};}();/**\r\n   * PJT Ⅱ - 과제 2: 작품 조회\r\n   * Req.2-F2 특정 주소의 보유 작품 목록 조회  \r\n   * \r\n   * PJT Ⅲ - 과제 2: 거래 진행  \r\n   * Req.4-F2 후즈컬렉션 화면 - 판매 상태에 따라 호출할 수 있는 기능이 달라집니다.\r\n   * \r\n   * 구현 예)\r\n   * 지갑 주소 입력 시 해당 주소가 보융한 작품 목록을 보여줍니다.\r\n   * 1. 판매 작품 조회 API 호출(with additional query data) 후 반환 받은 데이터를 가지고 카드 화면을 생성합니다.\r\n   * 요청 응답 데이터: Token ID, Sale 컨트랙트 주소, 아이템 Hash(카드 화면의 고유 구별 Key), 제목, 판매중 여부\r\n   * 2. NFT 컨트랙트의 tokenURI() 함수를 호출해 이미지를 화면에 표시할 수 있어야 합니다. \r\n   * 3. 빈 응답인 경우 결과 없음 화면이 출력됩니다.\r\n   * ------\r\n   * \r\n   * PJT Ⅲ에 아래 로직이 추가됩니다.\r\n   * Sale 컨트랙트의 상태와 버튼을 조회하여 종료 여부를 카드 요소에 전달합니다.\r\n   */var searchItem=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(addr){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// TODO\nsetIsCollection(false);setLoading(false);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function searchItem(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Page,{title:\"SSAFY NFT\",maxWidth:\"100%\",minHeight:\"100%\",children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",children:[/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,onReset:handleReset,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",sx:{mt:2},justifyContent:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(TextField,_objectSpread({sx:{width:'40%'},type:\"text\",label:\"\\uC9C0\\uAC11 \\uC8FC\\uC18C\"},getFieldProps('address'))),/*#__PURE__*/_jsx(LoadingButton,{sx:{ml:5,fontSize:18},size:\"large\",type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"\\uD655\\uC778\"})]})})}),loading===true?/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(MotionContainer,{initial:\"initial\",sx:{mt:10},open:true,children:/*#__PURE__*/_jsxs(Box,{sx:{maxWidth:480,margin:'auto',textAlign:'center'},children:[/*#__PURE__*/_jsx(motion.div,{variants:varBounceIn,children:/*#__PURE__*/_jsx(Typography,{variant:\"h3\",paragraph:true,children:\"\\uC544\\uC774\\uD15C \\uB85C\\uB529\\uC911...\"})}),/*#__PURE__*/_jsx(Typography,{sx:{color:'text.secondary'},children:\"\\uC544\\uC774\\uD15C\\uC744 \\uAC80\\uC0C9\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(motion.div,{variants:varBounceIn,children:/*#__PURE__*/_jsx(Box,{component:\"img\",src:\"/static/illustrations/illustration_register.png\",sx:{height:260,mx:'auto',my:{xs:5,sm:10}}})})]})})}):/*#__PURE__*/_jsx(_Fragment,{children:isCollection===true?/*#__PURE__*/_jsx(ItemList,{sx:{mt:5},products:products}):/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(MotionContainer,{initial:\"initial\",sx:{mt:10},open:true,children:/*#__PURE__*/_jsxs(Box,{sx:{maxWidth:480,margin:'auto',textAlign:'center'},children:[/*#__PURE__*/_jsx(motion.div,{variants:varBounceIn,children:/*#__PURE__*/_jsx(Typography,{variant:\"h3\",paragraph:true,children:\"\\uAC80\\uC0C9 \\uACB0\\uACFC \\uC5C6\\uC74C\"})}),/*#__PURE__*/_jsx(Typography,{sx:{color:'text.secondary'},children:\"\\uBCF4\\uC720\\uD558\\uACE0 \\uC788\\uB294 \\uCEEC\\uB809\\uC158\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(motion.div,{variants:varBounceIn,children:/*#__PURE__*/_jsx(Box,{component:\"img\",src:\"/static/illustrations/illustration_register.png\",sx:{height:260,mx:'auto',my:{xs:5,sm:10}}})})]})})})})]})});};export default WhosArt;","map":{"version":3,"sources":["C:/SSAFY/WORKSPACE/NFT/S06P22A106/frontend/src/pages/WhosArt.js"],"names":["Yup","Box","Container","Stack","TextField","Typography","Form","FormikProvider","useFormik","LoadingButton","useEffect","useState","MotionContainer","varBounceIn","motion","useLocation","ItemList","COMMON_HEADER","COMMON_ABI","COMMON_CONTRACT","onResponse","onInvalidAddress","moment","axios","Web3","Page","WhosArt","prevAddress","pathname","substring","item","setItem","loading","setLoading","isCollection","setIsCollection","currentTime","parseInt","toFixed","web3","providers","HttpProvider","process","env","REACT_APP_ETHEREUM_RPC_URL","searchItem","showItems","typeSchema","object","shape","address","string","required","formik","initialValues","validationSchema","onSubmit","value","checkAddress","isSubmitting","setSubmitting","handleSubmit","handleReset","getFieldProps","products","Array","length","map","_","index","image","title","onSale","tokenId","id","hash","ended","addr","targetAddress","utils","isAddress","mt","width","ml","fontSize","maxWidth","margin","textAlign","color","height","mx","my","xs","sm"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport { Box, Container, Stack, TextField, Typography } from '@mui/material';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useEffect, useState } from 'react';\r\nimport { MotionContainer, varBounceIn } from '../components/animate';\r\nimport { motion } from 'framer-motion';\r\nimport { useLocation } from 'react-router-dom';\r\nimport ItemList from '../layouts/whosart/ItemList';\r\nimport COMMON_HEADER from '../common/HeaderType';\r\nimport COMMON_ABI from '../common/ABI';\r\nimport COMMON_CONTRACT from '../common/SaleInfoGetter';\r\nimport { onResponse, onInvalidAddress } from '../common/ErrorMessage';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport Web3 from 'web3';\r\nimport Page from '../components/Page';\r\n\r\n/**\r\n * [후즈컬렉션]를 위한 UI와 기능\r\n */\r\nconst WhosArt = () => {\r\n  // [변수] 판매자 주소 (URL 파라미터 사용 / 구매하기 - 상세 작품 화면 - 컬렉션 보기로 진입한 경우 사용)\r\n  const prevAddress = useLocation().pathname.substring(9);\r\n\r\n  // [변수] 아이템, 로딩, 컬렉션 유무, 현재 시간\r\n  const [item, setItem] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isCollection, setIsCollection] = useState(false);\r\n  const currentTime = parseInt((moment() / 1000).toFixed(0));\r\n\r\n  // Web3\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_ETHEREUM_RPC_URL));\r\n\r\n  /**\r\n   * [초기 데이터 설정]\r\n   * 화면 첫 렌더링시 판매되고 있는 작품 리스트를 조회합니다. \r\n   * 만약 구매하기 - 상세 작품 화면 - 컬렉션 보기로 진입한 경우 판매자 주소가 넘어오며, \r\n   * 해당 주소를 조회하여 판매하고 있는 아이템을 확인합니다.\r\n  */\r\n  useEffect(() => {\r\n    if (prevAddress !== 'app') searchItem(prevAddress);\r\n    else showItems();\r\n  }, []);\r\n\r\n  // 타이핑 헬퍼\r\n  const typeSchema = Yup.object().shape({\r\n    address: Yup.string().required()\r\n  });\r\n\r\n  // 입력 데이터 처리\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      address: ''\r\n    },\r\n    validationSchema: typeSchema,\r\n    onSubmit: (value) => {\r\n      checkAddress(value.address);\r\n    }\r\n  });\r\n  const { isSubmitting, setSubmitting, handleSubmit, handleReset, getFieldProps } = formik;\r\n\r\n  // 카드 화면 생성을 위한 데이터 전달\r\n  const products = [...Array(item.length)].map((_, index) => {\r\n    return {\r\n      image: item[index].image,\r\n      title: item[index].title,\r\n      onSale: item[index].onSale,\r\n      tokenId: item[index].id,\r\n      hash: item[index].hash,\r\n      ended: item[index].ended\r\n    };\r\n  });\r\n\r\n  /**\r\n   * [주소 정합성 확인]\r\n   * 지갑 주소 창에 입력한 주소가 유효한 주소인 경우에 아이템을 조회하며, \r\n   * 지갑 주소 형태가 아닌 경우에는 유효한 주소를 입력해달라는 경고창을 출력합니다.\r\n   * @param {*} addr \r\n   */\r\n  const checkAddress = (addr) => {\r\n    const targetAddress = web3.utils.isAddress(addr);\r\n\r\n    if (targetAddress) searchItem(addr);\r\n    else {\r\n      setSubmitting(false);\r\n      onInvalidAddress();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * PJT Ⅱ - 과제 2: 작품 조회\r\n   * Req.2-F1 작품 목록 조회  \r\n   * \r\n   * PJT Ⅲ - 과제 2: 거래 진행  \r\n   * Req.4-F2 후즈컬렉션 화면 - 판매 상태에 따라 호출할 수 있는 기능이 달라집니다.\r\n   * \r\n   * 구현 예)\r\n   * 지갑 주소가 입력되어 있지 않은 경우 현재 판매중인 모든 아이템을 화면 상에 보여줍니다.\r\n   * 1. 판매 작품 조회 API 호출 후 반환 받은 데이터를 가지고 카드 화면을 생성합니다.\r\n   * 요청 응답 데이터: Token ID, Sale 컨트랙트 주소, 아이템 Hash(카드 화면의 고유 구별 Key), 제목, 판매중 여부\r\n   * 2. NFT 컨트랙트의 tokenURI() 함수를 호출해 이미지를 화면에 표시할 수 있어야 합니다. \r\n   * 3. 빈 응답인 경우 결과 없음 화면이 출력됩니다.\r\n   * ------\r\n   * \r\n   * PJT Ⅲ에 아래 로직이 추가됩니다.\r\n   * Sale 컨트랙트의 상태와 버튼을 조회하여 종료 여부를 카드 요소에 전달합니다.\r\n   */\r\n  const showItems = async () => {\r\n    // TODO\r\n    setIsCollection(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  /**\r\n   * PJT Ⅱ - 과제 2: 작품 조회\r\n   * Req.2-F2 특정 주소의 보유 작품 목록 조회  \r\n   * \r\n   * PJT Ⅲ - 과제 2: 거래 진행  \r\n   * Req.4-F2 후즈컬렉션 화면 - 판매 상태에 따라 호출할 수 있는 기능이 달라집니다.\r\n   * \r\n   * 구현 예)\r\n   * 지갑 주소 입력 시 해당 주소가 보융한 작품 목록을 보여줍니다.\r\n   * 1. 판매 작품 조회 API 호출(with additional query data) 후 반환 받은 데이터를 가지고 카드 화면을 생성합니다.\r\n   * 요청 응답 데이터: Token ID, Sale 컨트랙트 주소, 아이템 Hash(카드 화면의 고유 구별 Key), 제목, 판매중 여부\r\n   * 2. NFT 컨트랙트의 tokenURI() 함수를 호출해 이미지를 화면에 표시할 수 있어야 합니다. \r\n   * 3. 빈 응답인 경우 결과 없음 화면이 출력됩니다.\r\n   * ------\r\n   * \r\n   * PJT Ⅲ에 아래 로직이 추가됩니다.\r\n   * Sale 컨트랙트의 상태와 버튼을 조회하여 종료 여부를 카드 요소에 전달합니다.\r\n   */\r\n  const searchItem = async (addr) => {\r\n    // TODO\r\n    setIsCollection(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"SSAFY NFT\" maxWidth=\"100%\" minHeight=\"100%\">\r\n      <Container maxWidth=\"xl\">\r\n        <FormikProvider value={formik}>\r\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit} onReset={handleReset}>\r\n            <Stack direction=\"row\" sx={{ mt: 2 }} justifyContent=\"center\" alignItems=\"center\">\r\n              <TextField\r\n                sx={{ width: '40%' }}\r\n                type=\"text\"\r\n                label=\"지갑 주소\"\r\n                {...getFieldProps('address')}\r\n              />\r\n              <LoadingButton\r\n                sx={{ ml: 5, fontSize: 18 }}\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                loading={isSubmitting}\r\n              >\r\n                확인\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Form>\r\n        </FormikProvider>\r\n\r\n        {loading === true ? (\r\n          <Container>\r\n            <MotionContainer initial=\"initial\" sx={{ mt: 10 }} open>\r\n              <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\r\n                <motion.div variants={varBounceIn}>\r\n                  <Typography variant=\"h3\" paragraph>\r\n                    아이템 로딩중...\r\n                  </Typography>\r\n                </motion.div>\r\n                <Typography sx={{ color: 'text.secondary' }}>\r\n                  아이템을 검색하고 있습니다.\r\n                </Typography>\r\n\r\n                <motion.div variants={varBounceIn}>\r\n                  <Box\r\n                    component=\"img\"\r\n                    src=\"/static/illustrations/illustration_register.png\"\r\n                    sx={{ height: 260, mx: 'auto', my: { xs: 5, sm: 10 } }}\r\n                  />\r\n                </motion.div>\r\n              </Box>\r\n            </MotionContainer>\r\n          </Container>\r\n        ) : (\r\n          <>\r\n            {isCollection === true ? (\r\n              <ItemList sx={{ mt: 5 }} products={products} />\r\n            ) : (\r\n              <Container>\r\n                <MotionContainer initial=\"initial\" sx={{ mt: 10 }} open>\r\n                  <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\r\n                    <motion.div variants={varBounceIn}>\r\n                      <Typography variant=\"h3\" paragraph>\r\n                        검색 결과 없음\r\n                      </Typography>\r\n                    </motion.div>\r\n                    <Typography sx={{ color: 'text.secondary' }}>\r\n                      보유하고 있는 컬렉션이 없습니다.\r\n                    </Typography>\r\n\r\n                    <motion.div variants={varBounceIn}>\r\n                      <Box\r\n                        component=\"img\"\r\n                        src=\"/static/illustrations/illustration_register.png\"\r\n                        sx={{ height: 260, mx: 'auto', my: { xs: 5, sm: 10 } }}\r\n                      />\r\n                    </motion.div>\r\n                  </Box>\r\n                </MotionContainer>\r\n              </Container>\r\n            )}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default WhosArt;\r\n"]},"metadata":{},"sourceType":"module"}