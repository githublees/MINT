{"ast":null,"code":"import _asyncToGenerator from\"C:/SSAFY/WORKSPACE/NFT/S06P22A106/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\SSAFY\\\\WORKSPACE\\\\NFT\\\\S06P22A106\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import axios from'axios';import header from'./HeaderType';/* \r\nNFT별 Sale 컨트랙트 주소 확인을 위해 다음과 같이 공통 호출 함수를 선언할 수 있습니다.\r\n- 판매 정보 조회 API를 호출해서 DB에 저장된 값을 반환 받습니다.\r\n- 인자 id는 tokenID 정보를 받고, 결과에는 Sales 데이터가 출력됩니다.\r\n- Sales 데이터에서 반환되는 정보 중 sale_contract_address를 사용합니다.\r\n*/export default function getByTokenId(_x){return _getByTokenId.apply(this,arguments);}function _getByTokenId(){_getByTokenId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/sales?token_id='+id,{headers:{header:header}}).catch(function(err){throw err;});case 3:return _context.abrupt(\"return\",_context.sent);case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return _getByTokenId.apply(this,arguments);}","map":{"version":3,"sources":["C:/SSAFY/WORKSPACE/NFT/S06P22A106/frontend/src/common/SaleInfoGetter.js"],"names":["axios","header","getByTokenId","id","get","headers","catch","err","console","log"],"mappings":"6QAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA;AACA;AACA;AACA;AACA;AACA,EACA,uBAA8BC,CAAAA,YAA9B,iD,+FAAe,iBAA4BC,EAA5B,wJAEEH,CAAAA,KAAK,CACfI,GADU,CACN,mBAAqBD,EADf,CACmB,CAC5BE,OAAO,CAAE,CACPJ,MAAM,CAANA,MADO,CADmB,CADnB,EAMVK,KANU,CAMJ,SAACC,GAAD,CAAS,CACd,KAAMA,CAAAA,GAAN,CACD,CARU,CAFF,+GAYXC,OAAO,CAACC,GAAR,cAZW,mE","sourcesContent":["import axios from 'axios';\r\nimport header from './HeaderType';\r\n\r\n/* \r\nNFT별 Sale 컨트랙트 주소 확인을 위해 다음과 같이 공통 호출 함수를 선언할 수 있습니다.\r\n- 판매 정보 조회 API를 호출해서 DB에 저장된 값을 반환 받습니다.\r\n- 인자 id는 tokenID 정보를 받고, 결과에는 Sales 데이터가 출력됩니다.\r\n- Sales 데이터에서 반환되는 정보 중 sale_contract_address를 사용합니다.\r\n*/\r\nexport default async function getByTokenId(id) {\r\n  try {\r\n    return await axios\r\n      .get('/sales?token_id=' + id, {\r\n        headers: {\r\n          header\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}